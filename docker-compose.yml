version: '3.8'

services:
  # MCP Travel Weather Server
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: travel-weather-mcp-server
    environment:
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    networks:
      - travel-weather-network
    volumes:
      - logs:/app/logs
    ports:
      - "8001:8000"  # EksponÃ©r port for fremtidig HTTP transport
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.path.append('/app'); import mcp_server; print('Server OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Travel Weather Agent  
  travel-agent:
    build:
      context: .
      dockerfile: Dockerfile.agent
    container_name: travel-weather-agent
    environment:
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - PYTHONUNBUFFERED=1
      - MCP_SERVER_HOST=mcp-server
      - MCP_SERVER_PORT=8000
    restart: unless-stopped
    depends_on:
      mcp-server:
        condition: service_healthy
    networks:
      - travel-weather-network
    volumes:
      - logs:/app/logs
    stdin_open: true
    tty: true
    ports:
      - "8002:8000"  # Port for agent web interface if needed
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.path.append('/app'); import agent; print('Agent OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # MCP Inspector for testing og debugging (kun for utvikling)
  mcp-inspector:
    image: node:18-alpine
    container_name: travel-weather-inspector
    working_dir: /app
    command: >
      sh -c "apk add --no-cache python3 py3-pip &&
             pip3 install mcp[cli] httpx &&
             npm install -g @modelcontextprotocol/inspector &&
             npx @modelcontextprotocol/inspector python /app/mcp_server.py"
    environment:
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    volumes:
      - .:/app:ro
    ports:
      - "5173:5173"  # MCP Inspector web interface
    networks:
      - travel-weather-network
    profiles:
      - debug
    depends_on:
      mcp-server:
        condition: service_started

  # Web interface for easy agent interaction
  agent-web:
    build:
      context: .
      dockerfile: Dockerfile.agent-web
    container_name: travel-weather-web
    environment:
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - MCP_SERVER_HOST=mcp-server
    restart: unless-stopped
    depends_on:
      mcp-server:
        condition: service_healthy
    networks:
      - travel-weather-network
    ports:
      - "8080:8080"  # Web interface port
    volumes:
      - logs:/app/logs

networks:
  travel-weather-network:
    driver: bridge
    name: travel-weather-network

volumes:
  logs:
    driver: local
